讯鸟邮箱：通过腾讯企业邮箱登陆，账号liubb@infobird.com 密码6959000Liu;

框架集：<frameset></frameset>通常用来做后台界面
<frameset rows="150,*"></frameset>//分上下两行，上行高为150
<frameset cols="150,*"></frameset>//分为左右两列，左边150
rows="val1,val2,val3..." val值有几个，意味着页面上有几行，val表示行高，*表示剩余的全部；
<frameset>
	<frame src="连接页面的路径">
</frameset>
frameborder="0" 框架边框
scrolling="no" 没有滚动条
noresize="noresize" 不能重新改变框架集的大小


zend-studio:
复制当前行ctrl + alt +向下箭头
删除当前行ctrl + d
上下行互换 alt + 上下箭头
调出查找面板 Ctrl + f
全文检索Ctrl + H
关闭当前文件 Ctrl + w
查看所有快捷键 ctrl + shift + l

F5：单步调试进入函数内部（单步进入）
F6：单步调试不进入函数内部（跳过）
F7：由函数内部返回到调用处（跳出）

安装插件：help=>welcome

emmet插件：
>:表示上下层级
+:表示同级
*:表示数量
[]:其内填写tag的属性、属性值
{}:其内填写tag内的文本
$:在循环多个属性或者值情况下，$为其加上序号
():优先解析该符号中的内容
例如：
a[href="www.imooc.com"]{慕课}
ul>li.item${haha $$}*4
(select>.wrap>h1>p)+(select>.hah>p)//并列的结构


PHP数据类型

四种标量类型：string(字符串)integer(整形)float(浮点型，也作double)boolean(布尔型)

两种复合类型：
array(数组)object(对象)

两种特殊类型：
resource(资源);
null(空)

var_dump()//查看数据类型
print_r(数组名)//输出数组键及对应的值

$arr = array();//创建一个数组
PHP有两种数组：索引数组、关联数组。

isset(mixed var [, mixed var [, ...]])://若变量不存在则返回 FALSE
若变量存在且其值为NULL，也返回 FALSE
若变量存在且值不为NULL，则返回 TURE
同时检查多个变量时，每个单项都符合上一条要求时才返回 TRUE，否则结果为 FALSE 

empty(mixed var)//检查一个变量是否为空
若变量不存在则返回 TRUE
若变量存在且其值为""、0、"0"、NULL、、FALSE、array()、var $var; 以及没有任何属性的对象，则返回 TURE
若变量存在且值不为""、0、"0"、NULL、、FALSE、array()、var $var; 以及没有任何属性的对象，则返回 FALSE 

常量分为：系统常量与自定义常量
define(string sname,mixed Svalue,boolean case)函数定义常量
sname:常量名称
svalue:常量值
case:false为区分大小写，true为不区分大小写

预定义的变量:
传值中接受数据的变量
$_GET //数据量小，不安全
$_POST //数据量大，安全
$_REQUEST  // get与post的合用，效率较低
$_FILES  //上传变量经由HTTP POST 方式来上传文件

$_SESSION //在服务器端保存数据
$_COOKIE //在客户端保存数据
$_SERVER //系统的环境信息

魔术常量
__FILE__:当前文件的物理路径
__LINE__:当前行号
__FUNCTION__:当前的函数名
__CLASS__:当前的类名
__METHOD__:当前方法名称

1、转换成boolean
	true ===>1
	false:以下内容，在运算的时候将变成false;
		0/0.0 --> false
		空字符串 或 "0"-->false
		空数组/null -->false
2、转换成数值型：
	true ===>1 false ===>0
	字符串带有e E将转换成float
	字符串 数字字符串 将转换成整数或float
3、转换成字符串型
	boolean true ===>'1' false转换成字符串‘0’;
	null ===>"";
	数组 ===>"Array";
	对象 ===>"object";
	资源 ===>"resource#序号";

显示转换
int float boolean string array object
$str = 'aadfk';
(数据类型)$str;

php中：==只比较值，不比较类型；===都比较

mixed :类型不确定，混合类型；

int mt_rand([int $min],int $max) 生成更好的随机数 提高效率;

日期函数：
time()  //返回一个unix时间戳
strtotime()//将正常日期转换为时间戳

字符串
strlen() //获取字符串的长度，注意：是从下标为0开始计数的。
strtolower()


静态成员的注意事项：
1.静态属性用于保存类的公有数据
2.静态方法里面只能访问静态属性
3.静态成员不需要实例化对象就可以访问
4.类的内部可以通过self或者static关键字访问自身静态成员
5.可以通过parent关键字访问父类静态成员
6.可以通过类的名称在类定义外部访问静态成员

final:
使用final关键字后，子类不能重写父类的方法
final定义的类不能被继承。

1.parent关键字可以调用父类中被子类重写了的方法
2.self关键字可以用于访问类自身的成员方法，也可以用于访问自身的成员和类常量；不能用于访问类自身的属性；使用常量的时候不需要在常量名称前面添加$符号
3.static关键字用于访问类自身定义的静态成员，防伪静态属性时需要在属性面前添加$符号

接口
interface关键字用于定义接口
接口里面的方法不需要有方法的实现
implements关键字用于表示类实现某个接口
实现了某个接口之后，必须提供接口中定义的方法的具体实现。

instanceof用于判断一个对象是否是一个类或接口的实现
接口之间是可以继承的，某个类实现了一个继承类的时候，也必须实现父类的方法。

多态：
因为接口的方法实现可以有很多，所以对于接口里面定义的方法具体实现是多种多样的，这种特性我们称为多态
-比如接口A有两个实现B和C，B和C对A里面定义的方法的实现可以是不同，这种现象就是多态

abstract抽象
abstract关键字用于定义抽象类。
在抽象方法前面添加abstract关键字可以标明这个方法是抽象方法不需要具实习的实现。
继承抽象类的关键字也是extends
继承抽象类的子类需要实现抽象类中的方法
抽象类中可以包含普通的方法，有方法的具体实现

魔术方法：
__contruct(),__destruct();//构造方法，析构方法
__tostring();
__invoke();
__call(),__callStatic();
__get(),__set(),__isset(),__unset();
__clone();

__tostring():当对象被当做string使用时，这个方法会被自动调用
例：$obj = new Parent()   echo $obj;
__invoke()：当对象被当成方法调用时，这个方法会被自动调用
例：$obj = new Parent() echo $obj();

__call($name,$arguments);$name是方法名称，$argument是数组。当对象访问不存在的方法名称时，会自动调用
__callStatic($name,$arguments);$name时方法名称，$argument是数组。当对象访问不存在的静态方法时，会自动调用
注意：如果不设置该魔术方法，调查不存在的方法将会报错

__get():读取不可访问属性的值时，此方法会被调用
__set():在给不可访问的属性赋值时，此方法会被调用
__isset():当对不可访问属性调用isset()或empty()时，此方法被调用
__unset():当对不可访问属性调用unset()时，此方法会调用
所谓不可访问属性，实际上就是在调用某个属性时发现这个属性没有被定义，这时候不同的操作会触发不同的魔术方法。
这几个方法也被称为属性重载的魔术方法。

数组
索引数组中下标可以不连续
count //返回数组元素的个数
explode //使用一个字符串分割另一个字符串
join //连接数组成为一个字符串
array_values //返回一个数组中的所有值，类型是一个新数组
array_keys() //返回数组中的所有键值，类型也是一个新数组
array_pop() //返回数组中被“弹”出的值。
list() void list(mixed $name1,mixed $name2...)把数组中的值，赋给对应的变量，对关联数组无效，对索引数组有效
in_array() //判断一个元素是否在数组中。
array_reverse() //翻转数组的内容

常量的用法：
通常是定义一些不变的内容；

文件上传
form enctype="multipart/form-data"指定的编码方式
$_FILES[] //获取文件
error类型：     0  ok
		1  上传的文件操作php.ini指定的文件大小
		2,3,4..遇到在查看
tmp_name:文件临时位置
move_uploaded_file(临时位置，指定的位置)

文件的操作
fopen(string $filename,string $mode)：
'r':只读方式打开，将文件指针指向文件头。
'r+':读写方式，将文件指针指向文件头。
'w':写入方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创立之。
'w+':读写方式打开，将文件指针指向文件头并将文件大小截为零。如果文件不存在则尝试创立之。
'a':写入方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创立之。
'a+':读写方式打开，将文件指针指向文件末尾。如果文件不存在则尝试创立之。

fwrite(resource handle,string $string);将内容写入文件，可安全用于二进制文件
boolean fclose(resource handle)：关闭文件
string fread(int $handle,int $length)//读取文件
int filesize(string $fileName) 取得文件大小

序列化数据   //序列化后的数据可放入文件中，方便其他文件调用和读取。
serialize()序列化函数：产生一个可存储的值的标示。
string serizlize(mixed $value);
unserialize 反序列化
mixed unserialize(string $str)

文件包含
include(被包含的文件的url);如果被包含文件找不到，提示的错误是一个警告，后边代码继续执行
require(被包含文件的url)；如果被包含文件找不到，提示的错误是一个致命，后边代码不执行。

include_once(被包含文件的url)警告 后边代码执行
require_once(被包含文件的url)致命 后边代码不执行
以上两个都只执行一次包含的文件。

set_include_path()设定默认的包含路径。被包含的文件遵循相对路径规则

strip_tags(string,allow)//剥去字符串中的HTML，XML以及PHP 的标签。
例：echo strip_tags("Hello <b><i>world!</i></b>","<b>");

@error_reporting(0) //开发环境中，不建议使用

SQL匹配模式（开发中应用最多的一种）
注意点：
1）使用SQL匹配模式，不能使用操作符=或!=，而是使用操作符LIKE或NOT LIKE;
2)使用SQL匹配模式，MYSQL提供了两种通配符。
	%表示任意数量的任意字符（其中也包括0个）；
	_表示任意的单个字符
3)使用SQL匹配模式，如果匹配格式中不包含以上两种通配符中的任意一个，查其询的效果较低。
4）使用SQL匹配模式，默认情况下是不区分大小写的。

双引号里边的字符会被执行，单引号中的字符不会执行。
双引号解析变量，单引号不解析

命名空间
    1.作用：主要解决函数命名冲突或类命名冲突；
    2.在命名空间下使用系统的函数：例：\var_dump()
    3.在同一个页面可以使用多个命名空间，但不建议使用
    4.输出当前所处的命名空间名字：__NAMESPACE__




